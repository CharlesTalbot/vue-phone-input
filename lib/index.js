(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["VuePhoneInput"] = factory();
	else
		root["VuePhoneInput"] = factory();
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _VuePhoneInput = __webpack_require__(1);\n\nvar _VuePhoneInput2 = _interopRequireDefault(_VuePhoneInput);\n\n__webpack_require__(5);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* eslint-disable */\n\nexports.default = _VuePhoneInput2.default;\n\n/* eslint-disable no-undef */\n\n/* eslint-enable */\n\nif (window && window.Vue) {\n  window.Vue.component('vue-phone-input', _VuePhoneInput2.default);\n}\n\n/* eslint-enable no-undef */\n\n//////////////////\n// WEBPACK FOOTER\n// ./index.js\n// module id = 0\n// module chunks = 0\n\n//# sourceURL=webpack:///./index.js?");

/***/ }),
/* 1 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("Object.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_index_vue__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_index_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_index_vue__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_30bc6e88_hasScoped_false_node_modules_vue_loader_lib_selector_type_template_index_0_index_vue__ = __webpack_require__(4);\nvar disposed = false\nvar normalizeComponent = __webpack_require__(2)\n/* script */\n\n/* template */\n\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_index_vue___default.a,\n  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_30bc6e88_hasScoped_false_node_modules_vue_loader_lib_selector_type_template_index_0_index_vue__[\"a\" /* default */],\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\nComponent.options.__file = \"VuePhoneInput/index.vue\"\nif (Component.esModule && Object.keys(Component.esModule).some(function (key) {return key !== \"default\" && key.substr(0, 2) !== \"__\"})) {console.error(\"named exports are not supported in *.vue files.\")}\nif (Component.options.functional) {console.error(\"[vue-loader] index.vue: functional components are not supported with templates, they should use render functions.\")}\n\n/* hot reload */\nif (false) {(function () {\n  var hotAPI = require(\"vue-hot-reload-api\")\n  hotAPI.install(require(\"vue\"), false)\n  if (!hotAPI.compatible) return\n  module.hot.accept()\n  if (!module.hot.data) {\n    hotAPI.createRecord(\"data-v-30bc6e88\", Component.options)\n  } else {\n    hotAPI.reload(\"data-v-30bc6e88\", Component.options)\n  }\n  module.hot.dispose(function (data) {\n    disposed = true\n  })\n})()}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Component.exports);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./VuePhoneInput/index.vue\n// module id = 1\n// module chunks = 0\n\n//# sourceURL=webpack:///./VuePhoneInput/index.vue?");

/***/ }),
/* 2 */
/***/ (function(module, exports) {

eval("/* globals __VUE_SSR_CONTEXT__ */\n\n// this module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = injectStyles\n  }\n\n  if (hook) {\n    var functional = options.functional\n    var existing = functional\n      ? options.render\n      : options.beforeCreate\n    if (!functional) {\n      // inject component registration as beforeCreate hook\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    } else {\n      // register for functioal component in vue file\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return existing(h, context)\n      }\n    }\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/vue-loader/lib/component-normalizer.js\n// module id = 2\n// module chunks = 0\n\n//# sourceURL=webpack:///../node_modules/vue-loader/lib/component-normalizer.js?");

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/* eslint-disable no-unused-vars */\n\nvar has = Object.hasOwnProperty;\nvar isObject = function isObject(maybeObj) {\n  return Object.prototype.toString.call(maybeObj) === '[object Object]';\n};\nvar isArray = function isArray(maybeArray) {\n  return Object.prototype.toString.call(maybeArray) === '[object Array]';\n};\nvar isString = function isString(maybeString) {\n  return Object.prototype.toString.call(maybeString) === '[object String]';\n};\nvar isFunction = function isFunction(maybeFunc) {\n  return Object.prototype.toString.call(maybeFunc) === '[object Function]';\n};\n\n/* eslint-disable object-curly-newline */\n\nvar phonesData = {\n  af: { code: 'af', name: 'Afghanistan (‫افغانستان‬‎)', dialCode: 93, phoneFormat: '070 123 4567' },\n  al: { code: 'al', name: 'Albania (Shqipëri)', dialCode: 355, phoneFormat: '066 123 4567' },\n  dz: { code: 'dz', name: 'Algeria (‫الجزائر‬‎)', dialCode: 213, phoneFormat: '0551 23 45 67' },\n  as: { code: 'as', name: 'American Samoa', dialCode: 1684, phoneFormat: '(684) 733-1234' },\n  ad: { code: 'ad', name: 'Andorra', dialCode: 376, phoneFormat: '312 345' },\n  ao: { code: 'ao', name: 'Angola', dialCode: 244, phoneFormat: '923 123 456' },\n  ai: { code: 'ai', name: 'Anguilla', dialCode: 1264, phoneFormat: '(264) 235-1234' },\n  ag: { code: 'ag', name: 'Antigua and Barbuda', dialCode: 1268, phoneFormat: '(268) 464-1234' },\n  ar: { code: 'ar', name: 'Argentina', dialCode: 54, phoneFormat: '011 15-2345-6789' },\n  am: { code: 'am', name: 'Armenia (Հայաստան)', dialCode: 374, phoneFormat: '077 123456' },\n  aw: { code: 'aw', name: 'Aruba', dialCode: 297, phoneFormat: '560 1234' },\n  au: { code: 'au', name: 'Australia', dialCode: 61, phoneFormat: '0412 345 678' },\n  at: { code: 'at', name: 'Austria (Österreich)', dialCode: 43, phoneFormat: '0664 123456' },\n  az: { code: 'az', name: 'Azerbaijan (Azərbaycan)', dialCode: 994, phoneFormat: '040 123 45 67' },\n  bs: { code: 'bs', name: 'Bahamas', dialCode: 1242, phoneFormat: '(242) 359-1234' },\n  bh: { code: 'bh', name: 'Bahrain (‫البحرين‬‎)', dialCode: 973, phoneFormat: '3600 1234' },\n  bd: { code: 'bd', name: 'Bangladesh (বাংলাদেশ)', dialCode: 880, phoneFormat: '01812-345678' },\n  bb: { code: 'bb', name: 'Barbados', dialCode: 1246, phoneFormat: '(246) 250-1234' },\n  by: { code: 'by', name: 'Belarus (Беларусь)', dialCode: 375, phoneFormat: '8 029 491-19-11' },\n  be: { code: 'be', name: 'Belgium (België)', dialCode: 32, phoneFormat: '0470 12 34 56' },\n  bz: { code: 'bz', name: 'Belize', dialCode: 501, phoneFormat: '622-1234' },\n  bj: { code: 'bj', name: 'Benin (Bénin)', dialCode: 229, phoneFormat: '90 01 12 34' },\n  bm: { code: 'bm', name: 'Bermuda', dialCode: 1441, phoneFormat: '(441) 370-1234' },\n  bt: { code: 'bt', name: 'Bhutan (འབྲུག)', dialCode: 975, phoneFormat: '17 12 34 56' },\n  bo: { code: 'bo', name: 'Bolivia', dialCode: 591, phoneFormat: '71234567' },\n  ba: { code: 'ba', name: 'Bosnia and Herzegovina (Босна и Херцеговина)', dialCode: 387, phoneFormat: '061 123 456' },\n  bw: { code: 'bw', name: 'Botswana', dialCode: 267, phoneFormat: '71 123 456' },\n  br: { code: 'br', name: 'Brazil (Brasil)', dialCode: 55, phoneFormat: '(11) 96123-4567' },\n  io: { code: 'io', name: 'British Indian Ocean Territory', dialCode: 246, phoneFormat: '380 1234' },\n  vg: { code: 'vg', name: 'British Virgin Islands', dialCode: 1284, phoneFormat: '(284) 300-1234' },\n  bn: { code: 'bn', name: 'Brunei', dialCode: 673, phoneFormat: '712 3456' },\n  bg: { code: 'bg', name: 'Bulgaria (България)', dialCode: 359, phoneFormat: '048 123 456' },\n  bf: { code: 'bf', name: 'Burkina Faso', dialCode: 226, phoneFormat: '70 12 34 56' },\n  bi: { code: 'bi', name: 'Burundi (Uburundi)', dialCode: 257, phoneFormat: '79 56 12 34' },\n  kh: { code: 'kh', name: 'Cambodia (កម្ពុជា)', dialCode: 855, phoneFormat: '091 234 567' },\n  cm: { code: 'cm', name: 'Cameroon (Cameroun)', dialCode: 237, phoneFormat: '6 71 23 45 67' },\n  ca: { code: 'ca', name: 'Canada', dialCode: 1, phoneFormat: '(204) 234-5678' },\n  cv: { code: 'cv', name: 'Cape Verde (Kabu Verdi)', dialCode: 238, phoneFormat: '991 12 34' },\n  bq: { code: 'bq', name: 'Caribbean Netherlands', dialCode: 599, phoneFormat: '318 1234' },\n  ky: { code: 'ky', name: 'Cayman Islands', dialCode: 1345, phoneFormat: '(345) 323-1234' },\n  cf: { code: 'cf', name: 'Central African Republic (République centrafricaine)', dialCode: 236, phoneFormat: '70 01 23 45' },\n  td: { code: 'td', name: 'Chad (Tchad)', dialCode: 235, phoneFormat: '63 01 23 45' },\n  cl: { code: 'cl', name: 'Chile', dialCode: 56, phoneFormat: '09 6123 4567' },\n  cn: { code: 'cn', name: 'China (中国)', dialCode: 86, phoneFormat: '131 2345 6789' },\n  cx: { code: 'cx', name: 'Christmas Island', dialCode: 61, phoneFormat: '0412 345 678' },\n  cc: { code: 'cc', name: 'Cocos (Keeling) Islands', dialCode: 61, phoneFormat: '0412 345 678' },\n  co: { code: 'co', name: 'Colombia', dialCode: 57, phoneFormat: '321 1234567' },\n  km: { code: 'km', name: 'Comoros (‫جزر القمر‬‎)', dialCode: 269, phoneFormat: '321 23 45' },\n  cd: { code: 'cd', name: 'Congo (DRC) (Jamhuri ya Kidemokrasia ya Kongo)', dialCode: 243, phoneFormat: '0991 234 567' },\n  cg: { code: 'cg', name: 'Congo (Republic) (Congo-Brazzaville)', dialCode: 242, phoneFormat: '06 123 4567' },\n  ck: { code: 'ck', name: 'Cook Islands', dialCode: 682, phoneFormat: '71 234' },\n  cr: { code: 'cr', name: 'Costa Rica', dialCode: 506, phoneFormat: '8312 3456' },\n  ci: { code: 'ci', name: 'Côte d’Ivoire', dialCode: 225, phoneFormat: '01 23 45 67' },\n  hr: { code: 'hr', name: 'Croatia (Hrvatska)', dialCode: 385, phoneFormat: '091 234 5678' },\n  cu: { code: 'cu', name: 'Cuba', dialCode: 53, phoneFormat: '05 1234567' },\n  cw: { code: 'cw', name: 'Curaçao', dialCode: 599, phoneFormat: '9 518 1234' },\n  cy: { code: 'cy', name: 'Cyprus (Κύπρος)', dialCode: 357, phoneFormat: '96 123456' },\n  cz: { code: 'cz', name: 'Czech Republic (Česká republika)', dialCode: 420, phoneFormat: '601 123 456' },\n  dk: { code: 'dk', name: 'Denmark (Danmark)', dialCode: 45, phoneFormat: '20 12 34 56' },\n  dj: { code: 'dj', name: 'Djibouti', dialCode: 253, phoneFormat: '77 83 10 01' },\n  dm: { code: 'dm', name: 'Dominica', dialCode: 1767, phoneFormat: '(767) 225-1234' },\n  do: { code: 'do', name: 'Dominican Republic (República Dominicana)', dialCode: 1, phoneFormat: '(809) 234-5678' },\n  ec: { code: 'ec', name: 'Ecuador', dialCode: 593, phoneFormat: '099 123 4567' },\n  eg: { code: 'eg', name: 'Egypt (‫مصر‬‎)', dialCode: 20, phoneFormat: '0100 123 4567' },\n  sv: { code: 'sv', name: 'El Salvador', dialCode: 503, phoneFormat: '7012 3456' },\n  gq: { code: 'gq', name: 'Equatorial Guinea (Guinea Ecuatorial)', dialCode: 240, phoneFormat: '222 123 456' },\n  er: { code: 'er', name: 'Eritrea', dialCode: 291, phoneFormat: '07 123 456' },\n  ee: { code: 'ee', name: 'Estonia (Eesti)', dialCode: 372, phoneFormat: '5123 4567' },\n  et: { code: 'et', name: 'Ethiopia', dialCode: 251, phoneFormat: '091 123 4567' },\n  fk: { code: 'fk', name: 'Falkland Islands (Islas Malvinas)', dialCode: 500, phoneFormat: '51234' },\n  fo: { code: 'fo', name: 'Faroe Islands (Føroyar)', dialCode: 298, phoneFormat: '211234' },\n  fj: { code: 'fj', name: 'Fiji', dialCode: 679, phoneFormat: '701 2345' },\n  fi: { code: 'fi', name: 'Finland (Suomi)', dialCode: 358, phoneFormat: '041 2345678' },\n  fr: { code: 'fr', name: 'France', dialCode: 33, phoneFormat: '06 12 34 56 78' },\n  gf: { code: 'gf', name: 'French Guiana (Guyane française)', dialCode: 594, phoneFormat: '0694 20 12 34' },\n  pf: { code: 'pf', name: 'French Polynesia (Polynésie française)', dialCode: 689, phoneFormat: '87 12 34 56' },\n  ga: { code: 'ga', name: 'Gabon', dialCode: 241, phoneFormat: '06 03 12 34' },\n  gm: { code: 'gm', name: 'Gambia', dialCode: 220, phoneFormat: '301 2345' },\n  ge: { code: 'ge', name: 'Georgia (საქართველო)', dialCode: 995, phoneFormat: '555 12 34 56' },\n  de: { code: 'de', name: 'Germany (Deutschland)', dialCode: 49, phoneFormat: '01512 3456789' },\n  gh: { code: 'gh', name: 'Ghana (Gaana)', dialCode: 233, phoneFormat: '023 123 4567' },\n  gi: { code: 'gi', name: 'Gibraltar', dialCode: 350, phoneFormat: '57123456' },\n  gr: { code: 'gr', name: 'Greece (Ελλάδα)', dialCode: 30, phoneFormat: '691 234 5678' },\n  gl: { code: 'gl', name: 'Greenland (Kalaallit Nunaat)', dialCode: 299, phoneFormat: '22 12 34' },\n  gd: { code: 'gd', name: 'Grenada', dialCode: 1473, phoneFormat: '(473) 403-1234' },\n  gp: { code: 'gp', name: 'Guadeloupe', dialCode: 590, phoneFormat: '0690 30-1234' },\n  gu: { code: 'gu', name: 'Guam', dialCode: 1671, phoneFormat: '(671) 300-1234' },\n  gt: { code: 'gt', name: 'Guatemala', dialCode: 502, phoneFormat: '5123 4567' },\n  gg: { code: 'gg', name: 'Guernsey', dialCode: 44, phoneFormat: '07781 123456' },\n  gn: { code: 'gn', name: 'Guinea (Guinée)', dialCode: 224, phoneFormat: '601 12 34 56' },\n  gw: { code: 'gw', name: 'Guinea-Bissau (Guiné Bissau)', dialCode: 245, phoneFormat: '955 012 345' },\n  gy: { code: 'gy', name: 'Guyana', dialCode: 592, phoneFormat: '609 1234' },\n  ht: { code: 'ht', name: 'Haiti', dialCode: 509, phoneFormat: '34 10 1234' },\n  hn: { code: 'hn', name: 'Honduras', dialCode: 504, phoneFormat: '9123-4567' },\n  hk: { code: 'hk', name: 'Hong Kong (香港)', dialCode: 852, phoneFormat: '5123 4567' },\n  hu: { code: 'hu', name: 'Hungary (Magyarország)', dialCode: 36, phoneFormat: '(20) 123 4567' },\n  is: { code: 'is', name: 'Iceland (Ísland)', dialCode: 354, phoneFormat: '611 1234' },\n  in: { code: 'in', name: 'India (भारत)', dialCode: 91, phoneFormat: '099876 54321' },\n  id: { code: 'id', name: 'Indonesia', dialCode: 62, phoneFormat: '0812-345-678' },\n  ir: { code: 'ir', name: 'Iran (‫ایران‬‎)', dialCode: 98, phoneFormat: '0912 345 6789' },\n  iq: { code: 'iq', name: 'Iraq (‫العراق‬‎)', dialCode: 964, phoneFormat: '0791 234 5678' },\n  ie: { code: 'ie', name: 'Ireland', dialCode: 353, phoneFormat: '085 012 3456' },\n  im: { code: 'im', name: 'Isle of Man', dialCode: 44, phoneFormat: '07924 123456' },\n  il: { code: 'il', name: 'Israel (‫ישראל‬‎)', dialCode: 972, phoneFormat: '050-123-4567' },\n  it: { code: 'it', name: 'Italy (Italia)', dialCode: 39, phoneFormat: '312 345 6789' },\n  jm: { code: 'jm', name: 'Jamaica', dialCode: 1876, phoneFormat: '(876) 210-1234' },\n  jp: { code: 'jp', name: 'Japan (日本)', dialCode: 81, phoneFormat: '090-1234-5678' },\n  je: { code: 'je', name: 'Jersey', dialCode: 44, phoneFormat: '07797 123456' },\n  jo: { code: 'jo', name: 'Jordan (‫الأردن‬‎)', dialCode: 962, phoneFormat: '07 9012 3456' },\n  kz: { code: 'kz', name: 'Kazakhstan (Казахстан)', dialCode: 7, phoneFormat: '8 (771) 000 9998' },\n  ke: { code: 'ke', name: 'Kenya', dialCode: 254, phoneFormat: '0712 123456' },\n  ki: { code: 'ki', name: 'Kiribati', dialCode: 686, phoneFormat: '72012345' },\n  xk: { code: 'xk', name: 'Kosovo', dialCode: 383, phoneFormat: '' },\n  kw: { code: 'kw', name: 'Kuwait (‫الكويت‬‎)', dialCode: 965, phoneFormat: '500 12345' },\n  kg: { code: 'kg', name: 'Kyrgyzstan (Кыргызстан)', dialCode: 996, phoneFormat: '0700 123 456' },\n  la: { code: 'la', name: 'Laos (ລາວ)', dialCode: 856, phoneFormat: '020 23 123 456' },\n  lv: { code: 'lv', name: 'Latvia (Latvija)', dialCode: 371, phoneFormat: '21 234 567' },\n  lb: { code: 'lb', name: 'Lebanon (‫لبنان‬‎)', dialCode: 961, phoneFormat: '71 123 456' },\n  ls: { code: 'ls', name: 'Lesotho', dialCode: 266, phoneFormat: '5012 3456' },\n  lr: { code: 'lr', name: 'Liberia', dialCode: 231, phoneFormat: '077 012 3456' },\n  ly: { code: 'ly', name: 'Libya (‫ليبيا‬‎)', dialCode: 218, phoneFormat: '091-2345678' },\n  li: { code: 'li', name: 'Liechtenstein', dialCode: 423, phoneFormat: '660 234 567' },\n  lt: { code: 'lt', name: 'Lithuania (Lietuva)', dialCode: 370, phoneFormat: '(8-612) 34567' },\n  lu: { code: 'lu', name: 'Luxembourg', dialCode: 352, phoneFormat: '628 123 456' },\n  mo: { code: 'mo', name: 'Macau (澳門)', dialCode: 853, phoneFormat: '6612 3456' },\n  mk: { code: 'mk', name: 'Macedonia (FYROM) (Македонија)', dialCode: 389, phoneFormat: '072 345 678' },\n  mg: { code: 'mg', name: 'Madagascar (Madagasikara)', dialCode: 261, phoneFormat: '032 12 345 67' },\n  mw: { code: 'mw', name: 'Malawi', dialCode: 265, phoneFormat: '0991 23 45 67' },\n  my: { code: 'my', name: 'Malaysia', dialCode: 60, phoneFormat: '012-345 6789' },\n  mv: { code: 'mv', name: 'Maldives', dialCode: 960, phoneFormat: '771-2345' },\n  ml: { code: 'ml', name: 'Mali', dialCode: 223, phoneFormat: '65 01 23 45' },\n  mt: { code: 'mt', name: 'Malta', dialCode: 356, phoneFormat: '9696 1234' },\n  mh: { code: 'mh', name: 'Marshall Islands', dialCode: 692, phoneFormat: '235-1234' },\n  mq: { code: 'mq', name: 'Martinique', dialCode: 596, phoneFormat: '0696 20 12 34' },\n  mr: { code: 'mr', name: 'Mauritania (‫موريتانيا‬‎)', dialCode: 222, phoneFormat: '22 12 34 56' },\n  mu: { code: 'mu', name: 'Mauritius (Moris)', dialCode: 230, phoneFormat: '5251 2345' },\n  yt: { code: 'yt', name: 'Mayotte', dialCode: 262, phoneFormat: '0639 12 34 56' },\n  mx: { code: 'mx', name: 'Mexico (México)', dialCode: 52, phoneFormat: '044 222 123 4567' },\n  fm: { code: 'fm', name: 'Micronesia', dialCode: 691, phoneFormat: '350 1234' },\n  md: { code: 'md', name: 'Moldova (Republica Moldova)', dialCode: 373, phoneFormat: '0621 12 345' },\n  mc: { code: 'mc', name: 'Monaco', dialCode: 377, phoneFormat: '06 12 34 56 78' },\n  mn: { code: 'mn', name: 'Mongolia (Монгол)', dialCode: 976, phoneFormat: '8812 3456' },\n  me: { code: 'me', name: 'Montenegro (Crna Gora)', dialCode: 382, phoneFormat: '067 622 901' },\n  ms: { code: 'ms', name: 'Montserrat', dialCode: 1664, phoneFormat: '(664) 492-3456' },\n  ma: { code: 'ma', name: 'Morocco (‫المغرب‬‎)', dialCode: 212, phoneFormat: '0650-123456' },\n  mz: { code: 'mz', name: 'Mozambique (Moçambique)', dialCode: 258, phoneFormat: '82 123 4567' },\n  mm: { code: 'mm', name: 'Myanmar (Burma) (မြန်မာ)', dialCode: 95, phoneFormat: '09 212 3456' },\n  na: { code: 'na', name: 'Namibia (Namibië)', dialCode: 264, phoneFormat: '081 123 4567' },\n  nr: { code: 'nr', name: 'Nauru', dialCode: 674, phoneFormat: '555 1234' },\n  np: { code: 'np', name: 'Nepal (नेपाल)', dialCode: 977, phoneFormat: '984-1234567' },\n  nl: { code: 'nl', name: 'Netherlands (Nederland)', dialCode: 31, phoneFormat: '06 12345678' },\n  nc: { code: 'nc', name: 'New Caledonia (Nouvelle-Calédonie)', dialCode: 687, phoneFormat: '75.12.34' },\n  nz: { code: 'nz', name: 'New Zealand', dialCode: 64, phoneFormat: '021 123 4567' },\n  ni: { code: 'ni', name: 'Nicaragua', dialCode: 505, phoneFormat: '8123 4567' },\n  ne: { code: 'ne', name: 'Niger (Nijar)', dialCode: 227, phoneFormat: '93 12 34 56' },\n  ng: { code: 'ng', name: 'Nigeria', dialCode: 234, phoneFormat: '0802 123 4567' },\n  nu: { code: 'nu', name: 'Niue', dialCode: 683, phoneFormat: '1234' },\n  nf: { code: 'nf', name: 'Norfolk Island', dialCode: 672, phoneFormat: '3 81234' },\n  kp: { code: 'kp', name: 'North Korea (조선 민주주의 인민 공화국)', dialCode: 850, phoneFormat: '0192 123 4567' },\n  mp: { code: 'mp', name: 'Northern Mariana Islands', dialCode: 1670, phoneFormat: '(670) 234-5678' },\n  no: { code: 'no', name: 'Norway (Norge)', dialCode: 47, phoneFormat: '406 12 345' },\n  om: { code: 'om', name: 'Oman (‫عُمان‬‎)', dialCode: 968, phoneFormat: '9212 3456' },\n  pk: { code: 'pk', name: 'Pakistan (‫پاکستان‬‎)', dialCode: 92, phoneFormat: '0301 2345678' },\n  pw: { code: 'pw', name: 'Palau', dialCode: 680, phoneFormat: '620 1234' },\n  ps: { code: 'ps', name: 'Palestine (‫فلسطين‬‎)', dialCode: 970, phoneFormat: '0599 123 456' },\n  pa: { code: 'pa', name: 'Panama (Panamá)', dialCode: 507, phoneFormat: '6001-2345' },\n  pg: { code: 'pg', name: 'Papua New Guinea', dialCode: 675, phoneFormat: '681 2345' },\n  py: { code: 'py', name: 'Paraguay', dialCode: 595, phoneFormat: '0961 456789' },\n  pe: { code: 'pe', name: 'Peru (Perú)', dialCode: 51, phoneFormat: '912 345 678' },\n  ph: { code: 'ph', name: 'Philippines', dialCode: 63, phoneFormat: '0905 123 4567' },\n  pl: { code: 'pl', name: 'Poland (Polska)', dialCode: 48, phoneFormat: '512 345 678' },\n  pt: { code: 'pt', name: 'Portugal', dialCode: 351, phoneFormat: '912 345 678' },\n  pr: { code: 'pr', name: 'Puerto Rico', dialCode: 1, phoneFormat: '(787) 234-5678' },\n  qa: { code: 'qa', name: 'Qatar (‫قطر‬‎)', dialCode: 974, phoneFormat: '3312 3456' },\n  re: { code: 're', name: 'Réunion (La Réunion)', dialCode: 262, phoneFormat: '0692 12 34 56' },\n  ro: { code: 'ro', name: 'Romania (România)', dialCode: 40, phoneFormat: '0712 345 678' },\n  ru: { code: 'ru', name: 'Russia (Россия)', dialCode: 7, phoneFormat: '8 (912) 345-67-89' },\n  rw: { code: 'rw', name: 'Rwanda', dialCode: 250, phoneFormat: '0720 123 456' },\n  bl: { code: 'bl', name: 'Saint Barthélemy (Saint-Barthélemy)', dialCode: 590, phoneFormat: '0690 30-1234' },\n  sh: { code: 'sh', name: 'Saint Helena', dialCode: 290, phoneFormat: '51234' },\n  kn: { code: 'kn', name: 'Saint Kitts and Nevis', dialCode: 1869, phoneFormat: '(869) 765-2917' },\n  lc: { code: 'lc', name: 'Saint Lucia', dialCode: 1758, phoneFormat: '(758) 284-5678' },\n  mf: { code: 'mf', name: 'Saint Martin (Saint-Martin (partie française))', dialCode: 590, phoneFormat: '0690 30-1234' },\n  pm: { code: 'pm', name: 'Saint Pierre and Miquelon (Saint-Pierre-et-Miquelon)', dialCode: 508, phoneFormat: '055 12 34' },\n  vc: { code: 'vc', name: 'Saint Vincent and the Grenadines', dialCode: 1784, phoneFormat: '(784) 430-1234' },\n  ws: { code: 'ws', name: 'Samoa', dialCode: 685, phoneFormat: '601234' },\n  sm: { code: 'sm', name: 'San Marino', dialCode: 378, phoneFormat: '66 66 12 12' },\n  st: { code: 'st', name: 'São Tomé and Príncipe (São Tomé e Príncipe)', dialCode: 239, phoneFormat: '981 2345' },\n  sa: { code: 'sa', name: 'Saudi Arabia (‫المملكة العربية السعودية‬‎)', dialCode: 966, phoneFormat: '051 234 5678' },\n  sn: { code: 'sn', name: 'Senegal (Sénégal)', dialCode: 221, phoneFormat: '70 123 45 67' },\n  rs: { code: 'rs', name: 'Serbia (Србија)', dialCode: 381, phoneFormat: '060 1234567' },\n  sc: { code: 'sc', name: 'Seychelles', dialCode: 248, phoneFormat: '2 510 123' },\n  sl: { code: 'sl', name: 'Sierra Leone', dialCode: 232, phoneFormat: '(025) 123456' },\n  sg: { code: 'sg', name: 'Singapore', dialCode: 65, phoneFormat: '8123 4567' },\n  sx: { code: 'sx', name: 'Sint Maarten', dialCode: 1721, phoneFormat: '(721) 520-5678' },\n  sk: { code: 'sk', name: 'Slovakia (Slovensko)', dialCode: 421, phoneFormat: '0912 123 456' },\n  si: { code: 'si', name: 'Slovenia (Slovenija)', dialCode: 386, phoneFormat: '031 234 567' },\n  sb: { code: 'sb', name: 'Solomon Islands', dialCode: 677, phoneFormat: '74 21234' },\n  so: { code: 'so', name: 'Somalia (Soomaaliya)', dialCode: 252, phoneFormat: '7 1123456' },\n  za: { code: 'za', name: 'South Africa', dialCode: 27, phoneFormat: '071 123 4567' },\n  kr: { code: 'kr', name: 'South Korea (대한민국)', dialCode: 82, phoneFormat: '010-0000-0000' },\n  ss: { code: 'ss', name: 'South Sudan (‫جنوب السودان‬‎)', dialCode: 211, phoneFormat: '0977 123 456' },\n  es: { code: 'es', name: 'Spain (España)', dialCode: 34, phoneFormat: '612 34 56 78' },\n  lk: { code: 'lk', name: 'Sri Lanka (ශ්‍රී ලංකාව)', dialCode: 94, phoneFormat: '071 234 5678' },\n  sd: { code: 'sd', name: 'Sudan (‫السودان‬‎)', dialCode: 249, phoneFormat: '091 123 1234' },\n  sr: { code: 'sr', name: 'Suriname', dialCode: 597, phoneFormat: '741-2345' },\n  sj: { code: 'sj', name: 'Svalbard and Jan Mayen', dialCode: 47, phoneFormat: '412 34 567' },\n  sz: { code: 'sz', name: 'Swaziland', dialCode: 268, phoneFormat: '7612 3456' },\n  se: { code: 'se', name: 'Sweden (Sverige)', dialCode: 46, phoneFormat: '070-123 45 67' },\n  ch: { code: 'ch', name: 'Switzerland (Schweiz)', dialCode: 41, phoneFormat: '078 123 45 67' },\n  sy: { code: 'sy', name: 'Syria (‫سوريا‬‎)', dialCode: 963, phoneFormat: '0944 567 890' },\n  tw: { code: 'tw', name: 'Taiwan (台灣)', dialCode: 886, phoneFormat: '0912 345 678' },\n  tj: { code: 'tj', name: 'Tajikistan', dialCode: 992, phoneFormat: '(8) 917 12 3456' },\n  tz: { code: 'tz', name: 'Tanzania', dialCode: 255, phoneFormat: '0621 234 567' },\n  th: { code: 'th', name: 'Thailand (ไทย)', dialCode: 66, phoneFormat: '081 234 5678' },\n  tl: { code: 'tl', name: 'Timor-Leste', dialCode: 670, phoneFormat: '7721 2345' },\n  tg: { code: 'tg', name: 'Togo', dialCode: 228, phoneFormat: '90 11 23 45' },\n  tk: { code: 'tk', name: 'Tokelau', dialCode: 690, phoneFormat: '7290' },\n  to: { code: 'to', name: 'Tonga', dialCode: 676, phoneFormat: '771 5123' },\n  tt: { code: 'tt', name: 'Trinidad and Tobago', dialCode: 1868, phoneFormat: '(868) 291-1234' },\n  tn: { code: 'tn', name: 'Tunisia (‫تونس‬‎)', dialCode: 216, phoneFormat: '20 123 456' },\n  tr: { code: 'tr', name: 'Turkey (Türkiye)', dialCode: 90, phoneFormat: '0501 234 56 78' },\n  tm: { code: 'tm', name: 'Turkmenistan', dialCode: 993, phoneFormat: '8 66 123456' },\n  tc: { code: 'tc', name: 'Turks and Caicos Islands', dialCode: 1649, phoneFormat: '(649) 231-1234' },\n  tv: { code: 'tv', name: 'Tuvalu', dialCode: 688, phoneFormat: '901234' },\n  us: { code: 'us', name: 'United States', dialCode: 1, phoneFormat: '(201) 555-0123' },\n  gb: { code: 'gb', name: 'United Kingdom', dialCode: 44, phoneFormat: '07400 123456' },\n  vi: { code: 'vi', name: 'U.S. Virgin Islands', dialCode: 1340, phoneFormat: '(340) 642-1234' },\n  ug: { code: 'ug', name: 'Uganda', dialCode: 256, phoneFormat: '0712 345678' },\n  ua: { code: 'ua', name: 'Ukraine (Україна)', dialCode: 380, phoneFormat: '039 123 4567' },\n  ae: { code: 'ae', name: 'United Arab Emirates (‫الإمارات العربية المتحدة‬‎)', dialCode: 971, phoneFormat: '050 123 4567' },\n  uy: { code: 'uy', name: 'Uruguay', dialCode: 598, phoneFormat: '094 231 234' },\n  uz: { code: 'uz', name: 'Uzbekistan (Oʻzbekiston)', dialCode: 998, phoneFormat: '8 91 234 56 78' },\n  vu: { code: 'vu', name: 'Vanuatu', dialCode: 678, phoneFormat: '591 2345' },\n  va: { code: 'va', name: 'Vatican City (Città del Vaticano)', dialCode: 39, phoneFormat: '312 345 6789' },\n  ve: { code: 've', name: 'Venezuela', dialCode: 58, phoneFormat: '0412-1234567' },\n  vn: { code: 'vn', name: 'Vietnam (Việt Nam)', dialCode: 84, phoneFormat: '091 234 56 78' },\n  wf: { code: 'wf', name: 'Wallis and Futuna', dialCode: 681, phoneFormat: '50 12 34' },\n  eh: { code: 'eh', name: 'Western Sahara (‫الصحراء الغربية‬‎)', dialCode: 212, phoneFormat: '0650-123456' },\n  ye: { code: 'ye', name: 'Yemen (‫اليمن‬‎)', dialCode: 967, phoneFormat: '0712 345 678' },\n  zm: { code: 'zm', name: 'Zambia', dialCode: 260, phoneFormat: '095 5123456' },\n  zw: { code: 'zw', name: 'Zimbabwe', dialCode: 263, phoneFormat: '071 123 4567' },\n  ax: { code: 'ax', name: 'Åland Islands', dialCode: 358, phoneFormat: '041 2345678' }\n};\n\n/* eslint-enable object-curly-newline, no-unused-vars */\n\nvar counter = 0;\nvar defaultName = function defaultName() {\n  var returnName = 'tel-input-' + counter;\n  counter += 1;\n  return returnName;\n};\n\nexports.default = {\n  props: {\n    name: {\n      type: String,\n      default: defaultName\n    },\n    value: {\n      type: [Number, String],\n      default: ''\n    },\n    availbleOnly: {\n      type: Array,\n      default: null\n    },\n    toFront: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    code: {\n      type: String,\n      default: null\n    },\n    onChange: {\n      type: Function,\n      default: null\n    }\n  },\n\n  data: function data() {\n    var code = this.code,\n        availableOnly = this.availableOnly,\n        value = this.value;\n\n    var tmpPhonesData = Object.assign({}, phonesData);\n\n    if (isArray(availableOnly)) {\n      tmpPhonesData = {};\n      availableOnly.forEach(function (item) {\n        if (has.call(phonesData, item)) {\n          tmpPhonesData[item] = phonesData[item];\n        }\n      });\n    }\n\n    this.availableData = tmpPhonesData;\n    var needCode = has.call(this.availableData, code) ? code : Object.keys(this.availableData)[0];\n\n    if (!needCode) {\n      throw new Error('Available data is empty.Please set correct \"availableOnly\" attribute [vue-phone-input]');\n    }\n\n    return {\n      phoneNumber: value,\n      phoneCode: needCode,\n      isVisiblePanel: false\n    };\n  },\n\n\n  computed: {\n    currentPhoneData: function currentPhoneData() {\n      return this.availableData[this.phoneCode];\n    },\n    itemsData: function itemsData() {\n      var frontItems = [];\n      var otherItems = [];\n      var phonesDataCopy = Object.assign({}, this.availableData);\n\n      this.toFront.forEach(function (code) {\n        var item = phonesDataCopy[code];\n\n        if (isObject(item)) {\n          frontItems.push(item);\n          delete phonesDataCopy[code];\n        }\n      });\n\n      Object.values(phonesDataCopy).forEach(function (item) {\n        return otherItems.push(item);\n      });\n\n      var needSeparator = frontItems.length > 0 && otherItems.length > 0;\n\n      return {\n        frontItems: frontItems,\n        otherItems: otherItems,\n        needSeparator: needSeparator\n      };\n    }\n  },\n\n  methods: {\n    handleChangePhoneNumber: function handleChangePhoneNumber(event) {\n      this.phoneNumber = event.target.value;\n\n      if (isFunction(this.onChange)) {\n        this.onChange(this);\n      }\n    },\n    setCode: function setCode(code) {\n      this.phoneCode = code;\n      this.hideList();\n    },\n    showList: function showList() {\n      this.isVisiblePanel = true;\n    },\n    hideList: function hideList() {\n      this.isVisiblePanel = false;\n    }\n  }\n};\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/babel-loader/lib!../node_modules/vue-loader/lib/selector.js?type=script&index=0!./VuePhoneInput/index.vue\n// module id = 3\n// module chunks = 0\n\n//# sourceURL=webpack:///./VuePhoneInput/index.vue?../node_modules/babel-loader/lib!../node_modules/vue-loader/lib/selector.js?type=script&index=0");

/***/ }),
/* 4 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"intl-tel-input allow-dropdown\",\n    on: {\n      \"mouseleave\": _vm.hideList\n    }\n  }, [_c('div', {\n    staticClass: \"flag-container\",\n    on: {\n      \"click\": function($event) {\n        $event.stopPropagation();\n        _vm.showList($event)\n      }\n    }\n  }, [_c('div', {\n    staticClass: \"selected-flag\"\n  }, [_c('div', {\n    class: (\"iti-flag \" + _vm.phoneCode)\n  }), _vm._v(\" \"), _c('div', {\n    staticClass: \"iti-arrow\"\n  })]), _vm._v(\" \"), (_vm.isVisiblePanel) ? _c('ul', {\n    staticClass: \"country-list\"\n  }, [_vm._l((_vm.itemsData.frontItems), function(item) {\n    return _c('li', {\n      class: (\"country\" + (item.code === _vm.phoneCode ? ' highlight' : '')),\n      on: {\n        \"click\": function($event) {\n          $event.stopPropagation();\n          _vm.setCode(item.code)\n        }\n      }\n    }, [_c('div', {\n      staticClass: \"flag-box\"\n    }, [_c('div', {\n      class: (\"iti-flag \" + (item.code))\n    })]), _vm._v(\" \"), _c('span', {\n      staticClass: \"country-name\"\n    }, [_vm._v(_vm._s(item.name))]), _vm._v(\" \"), _c('span', {\n      staticClass: \"dial-code\"\n    }, [_vm._v(\"+\" + _vm._s(item.dialCode))])])\n  }), _vm._v(\" \"), (_vm.itemsData.needSeparator) ? _c('li', {\n    staticClass: \"divider\"\n  }) : _vm._e(), _vm._v(\" \"), _vm._l((_vm.itemsData.otherItems), function(item) {\n    return _c('li', {\n      class: (\"country\" + (item.code === _vm.phoneCode ? ' highlight' : '')),\n      on: {\n        \"click\": function($event) {\n          $event.stopPropagation();\n          _vm.setCode(item.code)\n        }\n      }\n    }, [_c('div', {\n      staticClass: \"flag-box\"\n    }, [_c('div', {\n      class: (\"iti-flag \" + (item.code))\n    })]), _vm._v(\" \"), _c('span', {\n      staticClass: \"country-name\"\n    }, [_vm._v(_vm._s(item.name))]), _vm._v(\" \"), _c('span', {\n      staticClass: \"dial-code\"\n    }, [_vm._v(\"+\" + _vm._s(item.dialCode))])])\n  })], 2) : _vm._e()]), _vm._v(\" \"), _c('input', {\n    staticClass: \"form-control\",\n    attrs: {\n      \"type\": \"text\",\n      \"name\": _vm.name,\n      \"autocomplete\": \"off\",\n      \"placeholder\": _vm.currentPhoneData.phoneFormat\n    },\n    domProps: {\n      \"value\": _vm.phoneNumber\n    },\n    on: {\n      \"input\": _vm.handleChangePhoneNumber\n    }\n  })])\n}\nvar staticRenderFns = []\nrender._withStripped = true\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ __webpack_exports__[\"a\"] = (esExports);\nif (false) {\n  module.hot.accept()\n  if (module.hot.data) {\n     require(\"vue-hot-reload-api\").rerender(\"data-v-30bc6e88\", esExports)\n  }\n}\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-30bc6e88\",\"hasScoped\":false}!../node_modules/vue-loader/lib/selector.js?type=template&index=0!./VuePhoneInput/index.vue\n// module id = 4\n// module chunks = 0\n\n//# sourceURL=webpack:///./VuePhoneInput/index.vue?../node_modules/vue-loader/lib/template-compiler?%7B%22id%22:%22data-v-30bc6e88%22,%22hasScoped%22:false%7D!../node_modules/vue-loader/lib/selector.js?type=template&index=0");

/***/ }),
/* 5 */
/***/ (function(module, exports) {

eval("// removed by extract-text-webpack-plugin\n\n//////////////////\n// WEBPACK FOOTER\n// ./style.less\n// module id = 5\n// module chunks = 0\n\n//# sourceURL=webpack:///./style.less?");

/***/ })
/******/ ]);
});